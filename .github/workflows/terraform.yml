name: 'SnowflakeTerraform CI/CD'

on:
  push:
    branches: [ main, develop ]
    paths: [ 'environments/**', '.github/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'environments/**', '.github/**' ]

env:
  TF_VERSION: '1.3.8'

  # Snowflake
  TF_VAR_snowflake_organization_name: ${{ secrets.SNOWFLAKE_ORGANIZATION_NAME }}
  TF_VAR_snowflake_account_name: ${{ secrets.SNOWFLAKE_ACCOUNT_NAME }}
  TF_VAR_snowflake_user: ${{ secrets.SNOWFLAKE_USER }}
  TF_VAR_snowflake_password: ${{ secrets.SNOWFLAKE_PASSWORD }}

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        environment: [dev]

    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Setup AWS credentials
      uses: aws-actions/configure-aws-credentials@v4.0.2
      with:
        role-to-assume: ${{secrets.ASSUME_ROLE_ARN}}
        # aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        # aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        # aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ap-northeast-1

    - name: Terraform Format
      run: terraform fmt -recursive
      working-directory: ./environments/${{ matrix.environment }}

    - name: Terraform Init
      run: terraform init -upgrade 
      working-directory: ./environments/${{ matrix.environment }}
      
    - name: Terraform Providers
      run: terraform providers
      working-directory: ./environments/${{ matrix.environment }}

    - name: Terraform Validate
      run: terraform validate
      working-directory: ./environments/${{ matrix.environment }}

    - name: Terraform Plan
      if: github.event_name == 'pull_request'
      run: terraform plan
      working-directory: ./environments/${{ matrix.environment }}

    - name: Terraform Apply (Dev)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push' && matrix.environment == 'dev'
      run: terraform apply -auto-approve
      working-directory: ./environments/${{ matrix.environment }}

    - name: Terraform Apply (Prod)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push' && matrix.environment == 'prod'
      run: terraform apply -auto-approve
      working-directory: ./environments/${{ matrix.environment }}